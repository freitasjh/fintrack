<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.3.xsd">

    <!-- Tabela de Detalhes dos Jobs -->
    <changeSet id="quartz-08092024Jquartz-08092024J1" author="Joao">
        <sql>
            -- Tabela de Detalhes dos Jobs
            CREATE TABLE QRTZ_JOB_DETAILS (
            SCHED_NAME VARCHAR(120) NOT NULL,
            JOB_NAME VARCHAR(200) NOT NULL,
            JOB_GROUP VARCHAR(200) NOT NULL,
            DESCRIPTION VARCHAR(250) NULL,
            JOB_CLASS_NAME VARCHAR(250) NOT NULL,
            IS_DURABLE VARCHAR(1) NOT NULL,
            IS_NONCONCURRENT VARCHAR(1) NOT NULL,
            IS_UPDATE_DATA VARCHAR(1) NOT NULL,
            REQUESTS_RECOVERY VARCHAR(1) NOT NULL,
            JOB_DATA BLOB NULL,
            PRIMARY KEY (SCHED_NAME, JOB_NAME, JOB_GROUP)
            );

            -- Tabela de Triggers
            CREATE TABLE QRTZ_TRIGGERS (
            SCHED_NAME VARCHAR(120) NOT NULL,
            TRIGGER_NAME VARCHAR(200) NOT NULL,
            TRIGGER_GROUP VARCHAR(200) NOT NULL,
            JOB_NAME VARCHAR(200) NOT NULL,
            JOB_GROUP VARCHAR(200) NOT NULL,
            DESCRIPTION VARCHAR(250) NULL,
            NEXT_FIRE_TIME BIGINT NULL,
            PREV_FIRE_TIME BIGINT NULL,
            PRIORITY INTEGER NULL,
            TRIGGER_STATE VARCHAR(16) NOT NULL,
            TRIGGER_TYPE VARCHAR(8) NOT NULL,
            START_TIME BIGINT NOT NULL,
            END_TIME BIGINT NULL,
            CALENDAR_NAME VARCHAR(200) NULL,
            MISFIRE_INSTR SMALLINT NULL,
            JOB_DATA BLOB NULL,
            PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
            FOREIGN KEY (SCHED_NAME, JOB_NAME, JOB_GROUP)
            REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME, JOB_NAME, JOB_GROUP)
            );

            -- Tabela de Simple Triggers
            CREATE TABLE QRTZ_SIMPLE_TRIGGERS (
            SCHED_NAME VARCHAR(120) NOT NULL,
            TRIGGER_NAME VARCHAR(200) NOT NULL,
            TRIGGER_GROUP VARCHAR(200) NOT NULL,
            REPEAT_COUNT BIGINT NOT NULL,
            REPEAT_INTERVAL BIGINT NOT NULL,
            TIMES_TRIGGERED BIGINT NOT NULL,
            PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
            FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
            REFERENCES QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
            );

            -- Tabela de Cron Triggers
            CREATE TABLE QRTZ_CRON_TRIGGERS (
            SCHED_NAME VARCHAR(120) NOT NULL,
            TRIGGER_NAME VARCHAR(200) NOT NULL,
            TRIGGER_GROUP VARCHAR(200) NOT NULL,
            CRON_EXPRESSION VARCHAR(120) NOT NULL,
            TIME_ZONE_ID VARCHAR(80),
            PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
            FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
            REFERENCES QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
            );

            -- Tabela de Blob Triggers
            CREATE TABLE QRTZ_BLOB_TRIGGERS (
            SCHED_NAME VARCHAR(120) NOT NULL,
            TRIGGER_NAME VARCHAR(200) NOT NULL,
            TRIGGER_GROUP VARCHAR(200) NOT NULL,
            BLOB_DATA BLOB NULL,
            PRIMARY KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP),
            FOREIGN KEY (SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
            REFERENCES QRTZ_TRIGGERS(SCHED_NAME, TRIGGER_NAME, TRIGGER_GROUP)
            );

            -- Tabela de Firing Triggers
            CREATE TABLE QRTZ_FIRED_TRIGGERS (
            SCHED_NAME VARCHAR(120) NOT NULL,
            ENTRY_ID VARCHAR(95) NOT NULL,
            TRIGGER_NAME VARCHAR(200) NOT NULL,
            TRIGGER_GROUP VARCHAR(200) NOT NULL,
            INSTANCE_NAME VARCHAR(200) NOT NULL,
            FIRED_TIME BIGINT NOT NULL,
            SCHED_TIME BIGINT NOT NULL,
            PRIORITY INTEGER NOT NULL,
            STATE VARCHAR(16) NOT NULL,
            JOB_NAME VARCHAR(200) NULL,
            JOB_GROUP VARCHAR(200) NULL,
            IS_NONCONCURRENT VARCHAR(1) NULL,
            REQUESTS_RECOVERY VARCHAR(1) NULL,
            PRIMARY KEY (SCHED_NAME, ENTRY_ID)
            );

            -- Tabela de Pausas de Triggers
            CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (
            SCHED_NAME VARCHAR(120) NOT NULL,
            TRIGGER_GROUP VARCHAR(200) NOT NULL,
            PRIMARY KEY (SCHED_NAME, TRIGGER_GROUP)
            );

            -- Tabela de Calendários
            CREATE TABLE QRTZ_CALENDARS (
            SCHED_NAME VARCHAR(120) NOT NULL,
            CALENDAR_NAME VARCHAR(200) NOT NULL,
            CALENDAR BLOB NOT NULL,
            PRIMARY KEY (SCHED_NAME, CALENDAR_NAME)
            );

            -- Tabela de Estatísticas do Scheduler
            CREATE TABLE QRTZ_SCHEDULER_STATE (
            SCHED_NAME VARCHAR(120) NOT NULL,
            INSTANCE_NAME VARCHAR(200) NOT NULL,
            LAST_CHECKIN_TIME BIGINT NOT NULL,
            CHECKIN_INTERVAL BIGINT NOT NULL,
            PRIMARY KEY (SCHED_NAME, INSTANCE_NAME)
            );

            -- Tabela de Locks
            CREATE TABLE QRTZ_LOCKS (
            SCHED_NAME VARCHAR(120) NOT NULL,
            LOCK_NAME VARCHAR(200) NOT NULL,
            PRIMARY KEY (SCHED_NAME, LOCK_NAME)
            );

        </sql>
    </changeSet>

</databaseChangeLog>
